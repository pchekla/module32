@model List<CoreStartApp.Models.Db.Feedback>
@{
    ViewData["Title"] = "Обратная связь";
}

<div class="container">
    <div class="row mb-4">
        <div class="col text-center">
            <h1 class="display-4">Оставьте отзыв о проекте</h1>
            <p class="lead text-muted">Ваше мнение важно для нас</p>
        </div>
    </div>

    <div class="row">
        <!-- Форма отзыва -->
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <form id="feedbackForm">
                        <div class="mb-3">
                            <label for="From" class="form-label">Ваше имя</label>
                            <input type="text" class="form-control" name="From" required />
                        </div>
                        <div class="mb-3">
                            <label for="Text" class="form-label">Ваш отзыв</label>
                            <textarea class="form-control" name="Text" rows="3" required></textarea>
                        </div>
                        <div class="text-center">
                            <button type="submit" class="btn btn-primary">Отправить</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Список отзывов -->
        <div class="col-md-8">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h5 class="card-title mb-0">Отзывы наших пользователей</h5>
                        <a href="@Url.Action("ClearFeedbacks")" class="btn btn-danger btn-sm" onclick="return confirm('Вы уверены, что хотите удалить все отзывы?');">
                            Очистить отзывы
                        </a>
                    </div>
                    <div id="feedbacksList">
                        @if (Model != null && Model.Any())
                        {
                            foreach (var feedback in Model)
                            {
                                <div class="card mb-3">
                                    <div class="card-body">
                                        <h6 class="card-subtitle mb-2 text-muted">@feedback.From</h6>
                                        <p class="card-text">@feedback.Text</p>
                                        <small class="text-muted">@feedback.CreatedAt.ToString("dd MMMM yyyy HH:mm")</small>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-center text-muted">Пока нет отзывов. Будьте первым!</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('feedbackForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            let data = new FormData(this);
            
            fetch('/Feedback', {
                method: 'POST',
                body: data
            })
            .then(response => response.json())
            .then(data => {
                this.reset();
                const successAlert = document.createElement('div');
                successAlert.className = 'alert alert-success mt-3';
                successAlert.textContent = data.message;
                this.appendChild(successAlert);
                
                // Обновляем список отзывов
                const feedbacksList = document.getElementById('feedbacksList');
                feedbacksList.innerHTML = '';
                
                if (data.feedbacks && data.feedbacks.length > 0) {
                    data.feedbacks.forEach(feedback => {
                        const feedbackElement = document.createElement('div');
                        feedbackElement.className = 'card mb-3';
                        feedbackElement.innerHTML = `
                            <div class="card-body">
                                <h6 class="card-subtitle mb-2 text-muted">${feedback.from}</h6>
                                <p class="card-text">${feedback.text}</p>
                                <small class="text-muted">${new Date(feedback.createdAt).toLocaleString('ru-RU', {
                                    day: '2-digit',
                                    month: 'long',
                                    year: 'numeric',
                                    hour: '2-digit',
                                    minute: '2-digit'
                                })}</small>
                            </div>
                        `;
                        feedbacksList.appendChild(feedbackElement);
                    });
                } else {
                    feedbacksList.innerHTML = '<p class="text-center text-muted">Пока нет отзывов. Будьте первым!</p>';
                }
                
                setTimeout(() => {
                    successAlert.remove();
                }, 3000);
            })
            .catch(error => {
                const errorAlert = document.createElement('div');
                errorAlert.className = 'alert alert-danger mt-3';
                errorAlert.textContent = error.message || 'Произошла ошибка при отправке отзыва. Пожалуйста, попробуйте позже.';
                this.appendChild(errorAlert);
                
                setTimeout(() => {
                    errorAlert.remove();
                }, 3000);
            });
        });
    </script>
} 